{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","useState","time","setTime","timerStart","setTimerStart","isWaitClicked","setIsWaitClicked","unitOfTime","timeDisplay","useCallback","durationInSeconds","hours","Math","floor","minutes","seconds","useEffect","unsubscribe","Subject","interval","pipe","takeUntil","subscribe","prevTime","next","complete","processingOfStart","prevTimerState","procesingOfWait","setTimeout","processingOfStop","procesingOfReset","className","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA4GeA,EAvGO,WACpB,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KACMC,EAAaN,EAAO,IAEpBO,EAAcC,uBAAY,SAACC,GAC/B,IAAMC,EAAQC,KAAKC,MAAMH,EAAoB,MACvCI,EAAUF,KAAKC,MAAOH,EAAoB,KAAQ,IAClDK,EAAUL,EAA4B,KAARC,EAAyB,GAAVG,EAEnD,MAAM,GAAN,OAAUH,EAAV,cAAqBG,EAArB,cAAkCC,KACjC,IAEHC,qBAAU,WACR,IAAMC,EAAc,IAAIC,IAUxB,OARAC,YAAS,KACNC,KAAKC,YAAUJ,IACfK,WAAU,WACLnB,GACFD,GAAQ,SAAAqB,GAAQ,OAAIA,EAAW,UAI9B,WACLN,EAAYO,KAAK,GACjBP,EAAYQ,cAEb,CAACtB,IAEJ,IAAMuB,EAAoBjB,uBAAY,WACpCL,GAAc,SAAAuB,GAAc,OAAKA,OAChC,IAEGC,EAAkBnB,uBAAY,WAC9BJ,EACFD,GAAc,GACJC,IACVC,GAAiB,GACjBuB,YAAW,kBAAMvB,GAAiB,KAAQ,QAE3C,CAACD,IAGEyB,EAAmBrB,uBAAY,WACnCP,EAAQ,GACRE,GAAc,KACb,IAEG2B,EAAmBtB,uBAAY,WACnCqB,IACAJ,MACC,CAACA,EAAmBI,IAEvB,OACE,qCACE,oBAAIE,UAAU,YAAd,uBACA,sBAAKA,UAAU,MAAf,UACE,sBACEA,UAAU,YADZ,SAGGxB,EAAYD,KAEf,sBAAKyB,UAAU,kBAAf,WACI7B,GACA,wBACE8B,KAAK,SACLC,QAASR,EACTM,UAAU,MAHZ,mBAQD7B,GACC,wBACE8B,KAAK,SACLC,QAASJ,EACTE,UAAU,MAHZ,kBAQF,wBACEC,KAAK,SACLD,UAAU,MACVE,QAASN,EAHX,kBAOA,wBACEK,KAAK,SACLC,QAASH,EACTC,UAAU,MAHZ,6BC3FVG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.519825fe.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\r\nimport { interval, Subject } from 'rxjs';\r\nimport { takeUntil } from \"rxjs/operators\";\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  const [time, setTime] = useState(0);\r\n  const [timerStart, setTimerStart] = useState(false);\r\n  const [isWaitClicked, setIsWaitClicked] = useState(false);\r\n  const unitOfTime = time / 1000;\r\n\r\n  const timeDisplay = useCallback((durationInSeconds: number) => {\r\n    const hours = Math.floor(durationInSeconds / 3600);\r\n    const minutes = Math.floor((durationInSeconds % 3600) / 60);\r\n    const seconds = durationInSeconds - hours * 3600 - minutes * 60;\r\n\r\n    return `${hours} : ${minutes} : ${seconds}`;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = new Subject();\r\n\r\n    interval(1000)\r\n      .pipe(takeUntil(unsubscribe))\r\n      .subscribe(() => {\r\n        if (timerStart) {\r\n          setTime(prevTime => prevTime + 1000)\r\n        }\r\n      });\r\n\r\n    return () => {\r\n      unsubscribe.next(0);\r\n      unsubscribe.complete();\r\n    };\r\n  }, [timerStart]);\r\n\r\n  const processingOfStart = useCallback(() => {\r\n    setTimerStart(prevTimerState => !prevTimerState);\r\n  }, [])\r\n\r\n  const procesingOfWait = useCallback(() => {\r\n    if (isWaitClicked) {\r\n      setTimerStart(false);\r\n    } else if (!isWaitClicked) {\r\n      setIsWaitClicked(true);\r\n      setTimeout(() => setIsWaitClicked(false), 300);\r\n    }\r\n  }, [isWaitClicked]);\r\n\r\n\r\n  const processingOfStop = useCallback(() => {\r\n    setTime(0);\r\n    setTimerStart(false);\r\n  }, []);\r\n\r\n  const procesingOfReset = useCallback(() => {\r\n    processingOfStop();\r\n    processingOfStart();\r\n  }, [processingOfStart, processingOfStop]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className=\"App-title\">Stopwatch</h1>\r\n      <div className=\"App\">\r\n        <span\r\n          className=\"stopwatch\"\r\n        >\r\n          {timeDisplay(unitOfTime)}\r\n        </span>\r\n        <div className=\"buttons-wrapper\">\r\n          {!timerStart && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={processingOfStart}\r\n              className=\"btn\"\r\n            >\r\n              Start\r\n            </button>\r\n          )}\r\n          {timerStart && (\r\n            <button\r\n              type=\"button\"\r\n              onClick={processingOfStop}\r\n              className=\"btn\"\r\n            >\r\n              Stop\r\n            </button>\r\n          )}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn\"\r\n            onClick={procesingOfWait}\r\n          >\r\n            Wait\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            onClick={procesingOfReset}\r\n            className=\"btn\"\r\n          >\r\n            Reset\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}